--EXHIBIT B PART C

/*THIS PART PROVIDES DETAILS OF A PARTICULAR PROJECT
WE HAVE HARDCODED A PROJECT ID, REPORT WILL HAVE PARAMETERS TO SELECT THE PROJECT ID*/

SELECT 
'IN-PIK-' || TO_CHAR(CONCAT(CONCAT(SUBSTR(PROJECTID,1,3),'-'),SUBSTR(PROJECTID,4))) AS PROJECT_NUMBER,
ADDRESS1 || ',' || ADDRESS2 || ' (' || COUNTY || ' County)' AS PROJECT_LOCATION,
DESCRIPTION AS PROJECT_DESCRIPTION
FROM PROJECT P JOIN SITE S
ON P.SITEID = S.SITEID
WHERE PROJECTID = '335005';


-- EXHIBIT B PART D, CREATE THE EEOC_VIEW AND THEN WE WILL SELECT DATA FROM THAT VIEW

/*WE ARE GENERATING EEOC REPORTS TO TRACK THE HOURS OF FEMALE AND MINORITY ON A PROJECT
WE HAVE HARDCODED AND PULLED DATA FOR A PROJECT ID, REPORT WILL HAVE PARAMETERS TO SELECT A PROJECT ID
WE ARE CONSIDERING THE REPORT HAS DATA OF 2 WEEKS, DATES CAN BE SELECTED FROM PARAMETERS
WE HAVE USED AND PULLED HOURS FROM '1-NOV-19' AND '14-NOV-19'*/

CREATE VIEW EEOC_VIEW AS (
SELECT JOB_CLASSIFICATION, MINORITY_MALE, MINORITY_FEMALE, NON_MINORITY_MALE, NON_MINORITY_FEMALE, 
JOB_HOURS, ROUND((MINORITY_FEMALE + MINORITY_MALE)/JOB_HOURS *100,1) AS PERCT_JOB_HOURS_MINORITY, 
ROUND((NON_MINORITY_FEMALE + MINORITY_FEMALE)/JOB_HOURS * 100,1) AS PERCT_JOB_HOURS_FEMALE
FROM
(
SELECT JOB_CLASSIFICATION, MINORITY_FEMALE, MINORITY_MALE, NON_MINORITY_FEMALE, NON_MINORITY_MALE,
(MINORITY_FEMALE + MINORITY_MALE + NON_MINORITY_FEMALE + NON_MINORITY_MALE) AS JOB_HOURS
FROM
(
SELECT JOB_CLASSIFICATION, NVL(SUM(MINORITY_FEMALE),0) AS MINORITY_FEMALE, NVL(SUM(MINORITY_MALE),0) AS MINORITY_MALE, 
NVL(SUM(NO_MINORITY_FEMALE),0) AS NON_MINORITY_FEMALE, NVL(SUM(NO_MINORITY_MALE),0) AS NON_MINORITY_MALE
FROM
(
SELECT RTRIM(SKILLCODE) || '-' || SKILLNAME AS JOB_CLASSIFICATION,
CASE WHEN UPPER(MINORITY) = 'YES' AND UPPER(GENDER) = 'FEMALE' THEN JOBHOURS END AS MINORITY_FEMALE,
CASE WHEN UPPER(MINORITY) = 'YES' AND UPPER(GENDER) = 'MALE' THEN JOBHOURS END AS MINORITY_MALE,
CASE WHEN UPPER(MINORITY) = 'NO' AND UPPER(GENDER) = 'FEMALE' THEN JOBHOURS END AS NO_MINORITY_FEMALE,
CASE WHEN UPPER(MINORITY) = 'NO' AND UPPER(GENDER) = 'MALE' THEN JOBHOURS END AS NO_MINORITY_MALE
FROM
(
SELECT  SKILLCODE, SKILLNAME,
MINORITY, GENDER,
SUM(REGULARHOURS) AS JOBHOURS
FROM EMPLOYEE P
JOIN EMPLOYEE_ENROLLMENT E
JOIN SKILLS S
ON E.SKILLID = S.SKILLID
ON P.EMPLOYEEID = E.EMPLOYEEID
WHERE PROJECTID = 335005 AND
EnrollmentDate BETWEEN '1-NOV-19' AND '14-NOV-19'
GROUP BY GENDER, MINORITY, SKILLCODE,SKILLNAME
ORDER BY SKILLCODE,SKILLNAME, MINORITY, GENDER
) A
) B
GROUP BY JOB_CLASSIFICATION
) C
) E );


--EXHIBIT B PART D 
SELECT * FROM EEOC_VIEW;

/*EXHIBIT B PART D TOTAL HOURS
THIS PART PROVIDES THE TOTAL HOUS FOR SAME PART D DATA*/

SELECT 'TOTAL HOURS' AS TOTAL_HOURS, 
MINORITY_MALE, 
MINORITY_FEMALE, 
NON_MINORITY_MALE, 
NON_MINORITY_FEMALE,
JOB_HOURS,
ROUND((MINORITY_MALE + MINORITY_FEMALE)/JOB_HOURS * 100,1) AS PERCENTAGE_MINORITY,
ROUND((MINORITY_FEMALE + NON_MINORITY_FEMALE)/JOB_HOURS * 100,1) AS PERCENTAGE_FEMALE
FROM(
SELECT SUM(MINORITY_MALE)AS  MINORITY_MALE, SUM(MINORITY_FEMALE) AS MINORITY_FEMALE, 
SUM(NON_MINORITY_MALE) AS NON_MINORITY_MALE , SUM(NON_MINORITY_FEMALE) AS NON_MINORITY_FEMALE,
SUM(JOB_HOURS) AS JOB_HOURS
FROM EEOC_VIEW) A;


/*EXHIBIT B PART E
THIS PART IS JUST GETTING THE DETAILS FOR PAYMASTER SIGNATURE, AND HAS MARY HENDERSON DETAILS*/

SELECT FIRSTNAME || lASTNAME AS NAME, CONTACT AS Telephone
FROM EMPLOYEE
WHERE EMPLOYEEID = 313578689;


/*EXHIBIT C PART C
THIS PART SHOWS DATA OF A WAGE SCALE FORM FOR A PARTICULAR PROJECT
USER CAN SELECT THE PROJECT ID FROM REPORT PARAMETERS */

SELECT 
SKILLCODE AS CODE, SKILLNAME AS JOB_CLASSIFICATION, RATE AS BASIC_HOURLY_RATE, 3 AS FRINGE_BENEFITS_PAYMENTS, RATE + 3 AS TOTAL_COMPENSATION 
FROM SKILLS S JOIN 
CONSTRUCTIONPLAN CP ON S.PLANID = CP.PLANID
JOIN BID B ON B.PLANID = CP.PLANID
JOIN PROJECT P ON P.BIDID = B.BIDID
WHERE P.PROJECTID = 335005 ORDER BY TOTAL_COMPENSATION;


/*EXHIBIT D
THIS REPORT IS FOR A SELECTED PROJECT ID AND IS TRACKING THE EMPLOYEE HOURS AND COMPENSATION ON THAT PROJECT BASED ON SKILLS*/

/*EXHIBIT D PART D
THIS PART TAKES REGULAR HOURS OF EMPLOYEES AND THE SKILLS THEY WORKED ON.
WE HAVE PULLED REPORT FOR DATES '1-Dec-19' AND '14-Dec-19', DATES CAN BE SELECTED FROM REPORT PARAMETERS */

SELECT EMPLOYEEID as EMPLOYEE_NUMBER, SKILLCODE AS SKILL_CODE, RATE, '3' AS FRINGE,TOTAL,HOURS1 AS HOURS, TOTAL*HOURS1 AS GROSS
 FROM(
SELECT EMPLOYEEID, SKILLCODE, RATE, RATE+3 AS TOTAL, SUM(REGULARHOURS) AS HOURS1
FROM EMPLOYEE_ENROLLMENT E JOIN SKILLS S
ON E.SKILLID = S.SKILLID
WHERE ENROLLMENTDATE BETWEEN '1-Dec-19' AND '14-Dec-19'
AND PROJECTID = 335005
GROUP BY EMPLOYEEID, SKILLCODE, RATE, RATE+3
) A;


/*EXHIBIT D PART E
THIS PART TAKES OVERTIME HOURS OF EMPLOYEES AND THE SKILLS THEY WORKED ON.
WE HAVE PULLED REPORT FOR DATES '1-Dec-19' AND '14-Dec-19', DATES CAN BE SELECTED FROM REPORT PARAMETERS */

SELECT EMPLOYEEID AS EMPLOYEE_NUMBER, SKILLCODE AS SKILL_CODE, RATE, '3' AS FRINGE,TOTAL,HOURS1 AS HOURS, TOTAL*HOURS1 AS GROSS
 FROM(
SELECT EMPLOYEEID, SKILLCODE, RATE, RATE*1.5+3 AS TOTAL, SUM(OVERTIMEHOURS) AS HOURS1
FROM EMPLOYEE_ENROLLMENT E JOIN SKILLS S
ON E.SKILLID = S.SKILLID
WHERE ENROLLMENTDATE BETWEEN '1-Dec-19' AND '14-Dec-19' AND OVERTIMEHOURS > 0
AND PROJECTID = 335005
GROUP BY EMPLOYEEID, SKILLCODE, RATE, RATE*1.5+3
) A;

/*EXHIBIT D PART F
THIS PART PROVIDES THE TOTAL HOURS W.R.T VARIOUS SKILLS FOR SELECTED TIME PERIOD FOR A PARTICULAR PROJECT
WE HAVE PULLED 2 WEEKS DATA FOR A PROJECT FROM '1-Dec-19' AND '14-Dec-19' */

SELECT DISTINCT SK.SKILLCODE AS JOB_SKILL_CODE, NVL(REGULAR,0) AS REGULAR, 
NVL(OVERTIME,0) AS OVERTIME, NVL(REGULAR+OVERTIME,0) AS TOTAL
FROM SKILLS SK LEFT JOIN
(
SELECT SKILLCODE, SUM(REGULARHOURS) AS REGULAR ,SUM(OVERTIMEHOURS) AS OVERTIME, PLANID
FROM SKILLS S LEFT JOIN EMPLOYEE_ENROLLMENT E 
ON E.SKILLID = S.SKILLID
WHERE ENROLLMENTDATE BETWEEN '1-Dec-19' AND '14-Dec-19' 
AND PROJECTID = 335005
GROUP BY SKILLCODE,PLANID) A
ON SK.SKILLCODE = A.SKILLCODE
WHERE SK.PLANID IN       /*SHOW SKILLS FOR ONLY THOSE PLAN WHICH RESPONDS TO OUR PROJECT */
(
SELECT DISTINCT S.PLANID 
FROM SKILLS S JOIN 
CONSTRUCTIONPLAN CP ON S.PLANID = CP.PLANID
JOIN BID B ON B.PLANID = CP.PLANID
JOIN PROJECT P ON P.BIDID = B.BIDID
WHERE P.PROJECTID = 335005);


/*EXHIBIT E
THIS IS A GENERAL EMPLOYEE FORM WHICH PULLS DATA FOR AN EMPLOYEE
HERE WE HAVE HARDCODED TO CHECK DATA FOR 1 EMPLOYEE, REPORT HAS PARAMETER TO SELECT THE EMPLOYEE */

--PART A
SELECT SSN AS SOCIAL_SECURITY, 
LASTNAME, 
FIRSTNAME, 
MIDDLEINITIAL AS MI,
ADDRESS1 || ' ' ||ADDRESS2 AS STREET,
CITY,
STATE,
ZIPCODE,
CONTACT AS TELEPHONE_NUMBER,
DATEOFBIRTH AS DATE_OF_BIRTH,
GENDER,
MARITALSTATUS AS MARITAL_STATUS,
EEOCCODE AS EEO_CODE
FROM EMPLOYEE
WHERE SSN = '390054489';

/*PART B
DISPLAY EEOC CODE TABLE*/ 
SELECT * FROM EEOCCODE;


/* EXHIBIT F - REGULARPAY
THIS REPORT WEEKLY PAY INFORMATION OF AN EMPLOYEE
WE HAVE PULLED DATA FOR AN EMPLOYEE FOR A WEEK, REPORT HAS PARAMETERS TO FILTER DATA. */

/* REGULAR PAY */
SELECT E.FIRSTNAME, E.MIDDLEINITIAL, E.LASTNAME, E.SSN, 
EE.ENROLLMENTDATE, S.JOBTYPE AS JOB, S.SKILLNAME AS SKILL, S.RATE, 3 AS FRINGE, S.RATE + 3 AS TOTAL, EE.REGULARHOURS AS HOURS, (S.RATE + 3) * EE.REGULARHOURS AS GROSS
FROM EMPLOYEE E JOIN EMPLOYEE_ENROLLMENT EE ON E.EMPLOYEEID = EE.EMPLOYEEID
                JOIN SKILLS S ON EE.SKILLID = S.SKILLID where E.SSN = '390054489'
                AND EE.REGULARHOURS <> 0 AND EE.ENROLLMENTDATE BETWEEN '8-OCT-2018' AND '13-OCT-2018';
                
SELECT SUM(REGULARHOURS) AS "TOTAL REGULAR PAY HOURS",SUM(((S.RATE + 3) * EE.REGULARHOURS)) AS "TOTAL REGULAR PAY"
FROM EMPLOYEE_ENROLLMENT EE JOIN SKILLS S ON EE.SKILLID = S.SKILLID
WHERE EMPLOYEEID IN ('390054489');
                
/* OVERTIME PAY */
SELECT S.JOBTYPE AS JOB , S.SKILLNAME AS SKILL, S.RATE,3 AS FRINGE, (S.RATE * 1.5) + 3 AS TOTAL, EE.OVERTIMEHOURS AS HOURS, ((S.RATE * 1.5) + 3) * EE.OVERTIMEHOURS AS GROSS
FROM EMPLOYEE E JOIN EMPLOYEE_ENROLLMENT EE ON E.EMPLOYEEID = EE.EMPLOYEEID
                JOIN SKILLS S ON EE.SKILLID = S.SKILLID 
                WHERE E.SSN = '390054489' AND EE.OVERTIMEHOURS <>0 AND EE.ENROLLMENTDATE BETWEEN '8-OCT-2018' AND '13-OCT-2018';
                
SELECT SUM(OVERTIMEHOURS) AS "TOTAL OVERTIME PAY HOURS",SUM(((S.RATE * 1.5) + 3) * EE.OVERTIMEHOURS) AS "TOTAL OVERTIME PAY"
FROM EMPLOYEE_ENROLLMENT EE JOIN SKILLS S ON EE.SKILLID = S.SKILLID
WHERE EMPLOYEEID IN ('390054489');


